{"version":3,"sources":["bootstrap.js","util.js","i18n.const.js","params.const.js","type.const.js","googleMaps.js","map.config.js","marker.js","track.js","kml.js","i18n.js","chart.js","map.js","storage.js","loader.js","api.js","init.js"],"names":["fruskac","prototype","Util","getParameterByName","name","url","window","location","href","replace","regex","RegExp","results","exec","decodeURIComponent","getParameterPartsByName","value","this","split","addClass","element","className","classList","add","removeClass","remove","join","I18N","LANGUAGES","SOURCE","DISTANCE","en","rs","ELEVATION","PARAMETER_FOCUS","PARAMETER_COORDINATES","PARAMETER_TRACK","PARAMETER_LAYERS","TYPE_MARKER","TYPE_TRACK","TYPE_KML","google","maps","Polyline","getBounds","bounds","LatLngBounds","getPath","forEach","item","extend","LatLng","lat","lng","CONFIG_LANG","CONFIG_FULLSCREEN","CONFIG_LAYERS","type","visible","Marker","options","data","setValues","position","parseFloat","map","gmap","OverlayView","draw","self","div","$","title","icon","markerWrap","getElementsByClassName","marker","markerShadow","style","cursor","panes","getPanes","overlayImage","appendChild","setTimeout","animateWobble","Math","random","event","addDomListener","animateBounce","console","log","setPoint","point","getProjection","fromLatLngToDivPixel","left","x","top","y","zIndex","round","setVisible","util","setOpaque","getPosition","onRemove","animateDrop","dynamics","stop","css","transform","outerHeight","opacity","animate","translateY","scaleY","gravity","duration","bounce","bounciness","scale","forceWithGravity","delay","rotateZ","scaleX","Track","_","geodesic","strokeColor","strokeOpacity","strokeWeight","Kml","preserveViewport","suppressInfoWindows","KmlLayer","I18n","lang","Object","keys","key","id","values","source","translate","Chart","container","getPathElevation","points","elevator","callback","gpath","push","getElevationAlongPath","path","samples","length","elevations","distance","rows","e","index","distanceFromPrevious","getDistance","elevation","p1","p2","R","dLat","rad","dLong","a","sin","cos","c","atan2","sqrt","d","toFixed","PI","placeMarker","center","getCenter","trigger","setCenter","show","isFixedLayout","find","ElevationService","charts","load","packages","language","setOnLoadCallback","visualization","DataTable","addColumn","i18n","addRows","lineWidth","areaOpacity","series","color","visibleInLegend","focusTarget","hAxis","baselineColor","gridlines","vAxis","minValue","legend","chart","AreaChart","document","getElementById","events","addListener","coords","getAt","row","on","closeChart","Map","infoWindow","InfoWindow","content","isCrossDomain","frameElement","hasAttribute","getType","object","hasOwnProperty","Promise","resolve","addMarker","then","addTrack","track","addKml","kml","tag","get","response","each","i","v","Number","attr","lon","p","setMap","focus","setZoom","panTo","interval","setInterval","clearInterval","fitBounds","showInfoWindow","html","setContent","open","fullscreen","params","getZoom","l","f","t","encodeURIComponent","Storage","getParentSelector","selector","parseSelector","hasParentSelector","selectorParts","splice","indexOf","toLowerCase","getSelectorsForContainer","items","children","itemSelector","getVisible","storage","getState","setState","subChildren","categories","highlight","category","parent","root","query","child","parentSelector","parentVisible","shoudBeOpaque","getSelectors","Loader","success","promises","all","apply","append","Api","ready","getData","clustering","undefined","clusterer","enabled","setMaxZoom","setGridSize","resetViewport","redraw","getMapTypeId","setMapTypeId","referrer","domain","test","documentElement","mapConfig","zoom","mapTypeId","MapTypeId","TERRAIN","mapTypeControl","zoomControlOptions","ControlPosition","LEFT_BOTTOM","streetViewControlOptions","latLngZoom","parts","overlayImageBounds","north","south","east","west","overlayOptions","clickable","groundOverlay","GroundOverlay","layers","activeLayers","layersFromUrl","layer","loader","addListenerOnce"],"mappings":"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","file":"map.min.js","sourcesContent":["'use strict';\n\nfunction fruskac() {\n}\nfruskac.prototype = fruskac;\n","'use strict';\n\nfruskac.Util = (function () {\n\n    function Util() {\n    }\n\n    Util.prototype = {\n        getParameterByName: function (name, url) {\n            if (!url) {\n                url = window.location.href;\n            }\n            name = name.replace(/[\\[\\]]/g, \"\\\\$&\");\n            var regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\"),\n                results = regex.exec(url);\n            if (!results) return null;\n            if (!results[2]) return '';\n            return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\n        },\n\n        getParameterPartsByName: function (name) {\n            var value = this.getParameterByName(name);\n            if (!value) {\n                return;\n            }\n            return value.split(',');\n        },\n\n        addClass: function (element, className) {\n            if (element.classList)\n                element.classList.add(className);\n            else\n                element.className += ' ' + className;\n        },\n\n        removeClass: function (element, className) {\n            if (element.classList)\n                element.classList.remove(className);\n            else\n                element.className = element.className.replace(new RegExp('(^|\\\\b)' + className.split(' ').join('|') + '(\\\\b|$)', 'gi'), ' ');\n        }\n\n    };\n\n    return Util;\n\n})();","'use strict';\n\nfruskac.I18N = {\n    LANGUAGES: [\n        'en',\n        'rs'\n    ],\n    SOURCE: {\n        DISTANCE: [\n            {en: 'Distance'},\n            {rs: 'Udaljenost'}\n        ],\n        ELEVATION: [\n            {en: 'Elevation'},\n            {rs: 'Visina'}\n        ]\n    }\n\n};\n\n","var PARAMETER_FOCUS = 'f';\nvar PARAMETER_COORDINATES = 'c';\nvar PARAMETER_TRACK = 't';\nvar PARAMETER_LAYERS = 'l';","var TYPE_MARKER = 'marker';\nvar TYPE_TRACK = 'track';\nvar TYPE_KML = 'kml';","'use strict';\n\n(function (google) {\n\n    /**\n     * Extend google.maps.Polyline to get bounds based on path\n     *\n     * @returns {google.maps.LatLngBounds}\n     */\n    google.maps.Polyline.prototype.getBounds = function () {\n        var bounds = new google.maps.LatLngBounds();\n        this.getPath().forEach(function (item) {\n            bounds.extend(new google.maps.LatLng(item.lat(), item.lng()));\n        });\n        return bounds;\n    };\n\n\n})(google);","var CONFIG_LANG = 'en';\nvar CONFIG_FULLSCREEN = '../examples/angularjs-with-material.html#!';\nvar CONFIG_LAYERS = [\n    {\n        url: '../data/locations-' + CONFIG_LANG + '.json',\n        name: 'Locations',\n        type: TYPE_MARKER,\n        visible: true\n    },\n    {\n        url: '../data/tourism.json',\n        name: 'tourism',\n        type: TYPE_MARKER,\n        visible: true\n    },\n    {\n        url: '../data/marathon.json',\n        name: 'Marathons',\n        type: TYPE_TRACK,\n        visible: false\n    },\n    {\n        url: '../data/protection.json',\n        name: 'Protection',\n        type: TYPE_KML,\n        visible: false\n    },\n    {\n        url: '../data/time.json',\n        name: 'Time',\n        type: TYPE_MARKER,\n        visible: false\n    }\n];","'use strict';\n\nfruskac.Marker = (function () {\n\n    /**\n     * @global\n     *\n     * @type {google.maps.OverlayView}\n     */\n    Marker.prototype = new google.maps.OverlayView();\n\n    /**\n     * @global\n     * @param {Object|undefined} options\n     * @constructor\n     */\n    function Marker(options) {\n        this.options = options;\n        this.data = options.data;\n        this.setValues({\n            position: new google.maps.LatLng(parseFloat(options.position.lat()), parseFloat(options.position.lng())),\n            map: gmap\n        });\n    }\n\n    /**\n     * Draw Overlay\n     */\n    Marker.prototype.draw = function () {\n        var self = this;\n        var div = this.div;\n        if (!div) {\n            div = this.div = $('' +\n                '<div' + (this.options.visible ? '' : ' class=\"hidden\"') + '>' +\n                '<div class=\"marker-shadow\"></div>' +\n                '<div class=\"marker-wrap\" title=\"' + this.options.title + '\">' +\n                '<div class=\"marker marker-' + this.options.icon + '\"></div>' +\n                '</div>' +\n                '</div>' +\n                '')[0];\n            this.markerWrap = this.div.getElementsByClassName('marker-wrap');\n            this.marker = this.div.getElementsByClassName('marker');\n            this.markerShadow = this.div.getElementsByClassName('marker-shadow');\n            div.style.position = 'absolute';\n            div.style.cursor = 'pointer';\n            var panes = this.getPanes();\n            panes.overlayImage.appendChild(div);\n\n            // add wobble animation on enter\n            setTimeout(function () {\n                self.animateWobble();\n            }, Math.random() * 800 + 200);\n\n            google.maps.event.addDomListener(div, \"click\", function () {\n                self.animateBounce();\n                console.log('TODO: show dialog')\n            });\n        }\n\n        self.setPoint(self.position);\n\n    };\n\n    /**\n     * Set position of Marker\n     *\n     * @param {LatLng|LatLngLiteral} position\n     */\n    Marker.prototype.setPoint = function (position) {\n        var point = this.getProjection().fromLatLngToDivPixel(position);\n        this.div.style.left = point.x + 'px';\n        this.div.style.top = point.y + 'px';\n        this.div.style.zIndex = Math.round(point.y * 100);\n    };\n\n    /**\n     * Set visibility\n     *\n     * @param {boolean} value\n     */\n    Marker.prototype.setVisible = function (value) {\n\n        var self = this;\n\n        if (self.div) {\n            if (value) {\n                setTimeout(function () {\n                    util.removeClass(self.div, 'hidden');\n\n                    // add wobble animation on enter\n                    self.animateWobble();\n\n                    //clusterer.addMarker(object);\n                }, Math.random() * 400);\n            } else {\n                setTimeout(function () {\n                    util.addClass(self.div, 'hidden');\n                    //clusterer.removeMarker(object);\n                }, Math.random() * 200);\n            }\n\n        }\n    };\n\n    /**\n     * Make marker semi-transparent\n     *\n     * @param {boolean} value\n     */\n    Marker.prototype.setOpaque = function (value) {\n        if (this.div) {\n            if (value) {\n                util.addClass(this.div, 'opaque');\n            } else {\n                util.removeClass(this.div, 'opaque');\n            }\n        }\n    };\n\n    /**\n     * Get position of Marker\n     */\n    Marker.prototype.getPosition = function () {\n        console.log('getPosition')\n    };\n\n    /**\n     * Remove marker\n     */\n    Marker.prototype.remove = function () {\n        this.div.remove();\n    };\n\n    /**\n     * onRemove handler\n     */\n    Marker.prototype.onRemove = function () {\n        this.remove();\n    };\n\n    /**\n     * Animate Marker with \"Drop\" animation\n     */\n    Marker.prototype.animateDrop = function () {\n        dynamics.stop(this.markerWrap);\n        dynamics.css(this.markerWrap, {\n            'transform': 'scaleY(2) translateY(-' + $('#map').outerHeight() + 'px)',\n            'opacity': '1'\n        });\n        dynamics.animate(this.markerWrap, {\n            translateY: 0,\n            scaleY: 1.0\n        }, {\n            type: dynamics.gravity,\n            duration: 1800\n        });\n\n        dynamics.stop(this.marker);\n        dynamics.css(this.marker, {\n            'transform': 'none'\n        });\n        dynamics.animate(this.marker, {\n            scaleY: 0.8\n        }, {\n            type: dynamics.bounce,\n            duration: 1800,\n            bounciness: 600\n        });\n\n        dynamics.stop(this.markerShadow);\n        dynamics.css(this.markerShadow, {\n            'transform': 'scale(0,0)',\n        });\n        dynamics.animate(this.markerShadow, {\n            scale: 1\n        }, {\n            type: dynamics.gravity,\n            duration: 1800\n        });\n    };\n\n    /**\n     * Animate Marker with Bounce animation\n     */\n    Marker.prototype.animateBounce = function () {\n        dynamics.stop(this.markerWrap);\n        dynamics.css(this.markerWrap, {\n            'transform': 'none'\n        });\n        dynamics.animate(this.markerWrap, {\n            translateY: -30\n        }, {\n            type: dynamics.forceWithGravity,\n            bounciness: 0,\n            duration: 500,\n            delay: 150\n        });\n\n        dynamics.stop(this.marker);\n        dynamics.css(this.marker, {\n            'transform': 'none'\n        });\n        dynamics.animate(this.marker, {\n            scaleY: 0.8\n        }, {\n            type: dynamics.bounce,\n            duration: 800,\n            bounciness: 0\n        });\n        dynamics.animate(this.marker, {\n            scaleY: 0.8\n        }, {\n            type: dynamics.bounce,\n            duration: 800,\n            bounciness: 600,\n            delay: 650\n        });\n\n        dynamics.stop(this.markerShadow);\n        dynamics.css(this.markerShadow, {\n            'transform': 'none',\n        });\n        dynamics.animate(this.markerShadow, {\n            scale: 0.6\n        }, {\n            type: dynamics.forceWithGravity,\n            bounciness: 0,\n            duration: 500,\n            delay: 150\n        });\n    };\n\n    /**\n     * Animate Marker with Wobble animation\n     */\n    Marker.prototype.animateWobble = function () {\n        dynamics.stop(this.markerWrap);\n        dynamics.css(this.markerWrap, {\n            'transform': 'none'\n        });\n        dynamics.animate(this.markerWrap, {\n            rotateZ: Math.random() * 90 - 45\n        }, {\n            type: dynamics.bounce,\n            duration: 1800\n        });\n\n        dynamics.stop(this.marker);\n        dynamics.css(this.marker, {\n            'transform': 'none'\n        });\n        dynamics.animate(this.marker, {\n            scaleX: 0.8\n        }, {\n            type: dynamics.bounce,\n            duration: 800,\n            bounciness: 1800\n        });\n    };\n\n    return Marker;\n\n    /**\n     * Creates HTML that will be presented on InfoWindow\n     *\n     * @param {Object} data\n     * @returns {string}\n     */\n    function getInfoWindowContent(data) {\n        var html = '<h1>' + data.title + '</h1>';\n        if (data.description) {\n            html += '<p>' + data.description + '</p>';\n        }\n        if (data.image) {\n            html += '<img src=\"' + data.image + '\">';\n        }\n        if (data.link) {\n            html += '<a href=\"' + data.link + '\" target=\"_blank\">' + data.link + '</a>';\n        }\n        return html;\n    }\n\n})();\n","'use strict';\n\nfruskac.Track = (function () {\n\n    /**\n     * Track\n     * @global\n     * @param {Object|undefined} options\n     * @constructor\n     */\n    function Track(options) {\n\n        options = _.extend({\n            map: gmap,\n            geodesic: true,\n            strokeColor: 'rgb(51, 102, 204)',\n            strokeOpacity: 1.0,\n            strokeWeight: 4\n        }, options);\n\n        return (function () {\n            return new google.maps.Polyline(options)\n        })();\n    }\n\n    return Track;\n\n})();","'use strict';\n\nfruskac.Kml = (function () {\n\n    /**\n     * KML\n     * @global\n     * @param {string} url\n     * @param {Object|undefined} options\n     * @constructor\n     */\n    function Kml(url, options) {\n\n        options = _.extend({\n            map: gmap,\n            preserveViewport: true,\n            suppressInfoWindows: true,\n            data: {\n                type: 'kml'\n            }\n        }, options);\n\n        return (function () {\n            return new google.maps.KmlLayer(url, options)\n        })();\n    }\n\n    return Kml;\n\n})();","'use strict';\n\nfruskac.I18n = (function () {\n\n    var source = {};\n\n    function I18n(lang) {\n        this.lang = lang;\n        Object.keys(fruskac.I18N.SOURCE).forEach(function (key) {\n            add(key, fruskac.I18N.SOURCE[key])\n        })\n    }\n\n    I18n.prototype = {\n        translate: function (id) {\n            return source[this.lang] && source[this.lang][id] || '__TRANSLATION_MISSING__';\n        }\n    };\n\n    function add(id, values) {\n        values.forEach(function (value) {\n            fruskac.I18N.LANGUAGES.forEach(function (lang) {\n                if (value[lang]) {\n                    if (!source[lang]) {\n                        source[lang] = {};\n                    }\n                    source[lang][id] = value[lang];\n                }\n            })\n        });\n    }\n\n    return I18n;\n\n})();","'use strict';\n\nfruskac.Chart = (function () {\n\n    /**\n     * @global\n     * @param {HTMLDomElement} container\n     * @constructor\n     */\n    function Chart(container) {\n        var self = this;\n        self.visible = false;\n        self.container = container;\n    }\n\n    /**\n     * @global\n     */\n    Chart.prototype = {\n\n        /**\n         * Set chart container visibility\n         *\n         * @param {boolean} value\n         */\n        setVisible: function (value) {\n\n            var self = this;\n\n            self.visible = value;\n\n            var className = 'on';\n\n            if (self.visible) {\n                $(self.container).addClass(className);\n            } else {\n                $(self.container).removeClass(className);\n                map.placeMarker();\n            }\n\n            var center = gmap.getCenter();\n            google.maps.event.trigger(gmap, \"resize\");\n            gmap.setCenter(center);\n\n        },\n\n        /**\n         * Show chart\n         *\n         * @param {Array} points\n         */\n        show: function (points, isFixedLayout) {\n\n            var self = this;\n\n            self.setVisible(true);\n\n            if (isFixedLayout) {\n                $(self.container).find('button').remove();\n            }\n\n            var elevator = new google.maps.ElevationService;\n\n            // Load the Visualization API and the corechart package.\n            google.charts.load('current', {\n                packages: ['corechart'],\n                language: fruskac.lang\n            });\n\n            // Set a callback to run when the Google Visualization API is loaded.\n            google.charts.setOnLoadCallback(function () {\n                getPathElevation(points, elevator, function (rows) {\n\n                    // Create the data table.\n                    var data = new google.visualization.DataTable();\n                    data.addColumn('number', i18n.translate('DISTANCE'));\n                    data.addColumn('number', i18n.translate('ELEVATION'));\n                    data.addRows(rows);\n\n                    // Set chart options\n                    var options = {\n                        lineWidth: 2,\n                        areaOpacity: 0.2,\n                        series: [\n                            {color: 'black', visibleInLegend: false}, {}, {},\n                        ],\n                        focusTarget: 'category',\n                        hAxis: {\n                            baselineColor: 'transparent',\n                            title: i18n.translate('DISTANCE') + ' (km)',\n                            gridlines: {\n                                color: 'transparent'\n                            },\n                        },\n                        vAxis: {\n                            baselineColor: 'transparent',\n                            title: i18n.translate('ELEVATION') + ' (m)',\n                            minValue: 0,\n                            gridlines: {\n                                color: 'transparent'\n                            },\n                        },\n                        legend: {\n                            position: \"none\"\n                        }\n                    };\n\n                    // Instantiate and draw our chart, passing in some options.\n                    var chart = new google.visualization.AreaChart(document.getElementById('chart'));\n                    chart.draw(data, options);\n\n                    google.visualization.events.addListener(chart, 'onmouseover', function (coords) {\n                        map.placeMarker(points.getAt(coords.row))\n                    });\n\n                    $(window).on('resize', function () {\n                        chart.draw(data, options);\n                    });\n\n                });\n            });\n\n        }\n    };\n\n    /**\n     *\n     * @param {Object[]} points\n     * @param {google.maps.ElevationService} elevator\n     * @param {Function} callback\n     */\n    function getPathElevation(points, elevator, callback) {\n\n        var gpath = [];\n        points.forEach(function (point) {\n            gpath.push(point)\n        });\n\n        // Create a PathElevationRequest object using this array.\n        elevator.getElevationAlongPath({\n            'path': gpath,\n            'samples': gpath.length\n        }, function (elevations) {\n            var distance = 0;\n            var rows = [];\n            elevations.forEach(function (e, index) {\n                var distanceFromPrevious;\n                if (index) {\n                    distanceFromPrevious = getDistance(elevations[index].location, elevations[index - 1].location)\n                } else {\n                    distanceFromPrevious = 0;\n                }\n                distance += parseFloat(distanceFromPrevious);\n                rows.push([distance, e.elevation]);\n            });\n            callback(rows);\n        });\n    }\n\n    /**\n     * calculates distance between two points in km's\n     *\n     * @param {google.maps.LatLng} p1\n     * @param {google.maps.LatLng} p2\n     * @returns {string}\n     */\n    function getDistance(p1, p2) {\n        var R = 6378137; // Earth’s mean radius in meter\n        var dLat = rad(p2.lat() - p1.lat());\n        var dLong = rad(p2.lng() - p1.lng());\n        var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n            Math.cos(rad(p1.lat())) * Math.cos(rad(p2.lat())) *\n            Math.sin(dLong / 2) * Math.sin(dLong / 2);\n        var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n        var d = R * c;\n        return (d / 1000).toFixed(2); // \"d\" returns the distance in meter\n        //return (google.maps.geometry.spherical.computeDistanceBetween(p1, p2) / 1000).toFixed(2);\n    }\n\n    /**\n     *\n     * @param {number} x\n     * @returns {number}\n     */\n    function rad(x) {\n        return x * Math.PI / 180;\n    }\n\n    window.closeChart = function () {\n        chart.setVisible(false);\n    };\n\n    return Chart;\n\n})();","'use strict';\n\nfruskac.Map = (function () {\n\n    /**\n     * Map\n     * @global\n     * @param {google.maps.Map} map\n     * @constructor\n     */\n    function Map(map) {\n\n        this.infoWindow = new google.maps.InfoWindow({\n            content: \"holding...\"\n        });\n\n        // show fullscreen button if CrossDomain or if \"allowfullscreen\" attribute added to iframe\n        if (fruskac.isCrossDomain || window.frameElement && window.frameElement.hasAttribute('allowFullScreen')) {\n            $('#map_container > button').show();\n        }\n\n    }\n\n    /**\n     * @global\n     */\n    Map.prototype = {\n\n        /**\n         * Add object to map\n         * @param {Object} data\n         * @param {string} type\n         * @param {boolean} visible\n         * @returns {Promise}\n         */\n        add: function (data, type, visible) {\n\n            var self = this;\n\n            return new Promise(function (resolve) {\n                switch (type) {\n                    case TYPE_MARKER:\n                        return self.addMarker(data, visible).then(function (marker) {\n                            resolve(marker);\n                        });\n                        break;\n                    case TYPE_TRACK:\n                        return self.addTrack(data, visible).then(function (track) {\n                            resolve(track);\n                        });\n                        break;\n                    case TYPE_KML:\n                        return self.addKml(data, visible).then(function (kml) {\n                            resolve(kml);\n                        });\n                        break;\n                }\n            });\n\n        },\n\n        /**\n         * Add marker to map\n         * @param {Object} data\n         * @param {boolean} visible\n         * @returns {Promise}\n         */\n        addMarker: function (data, visible) {\n\n            return new Promise(function (resolve) {\n\n                var marker = new fruskac.Marker({\n                    position: new google.maps.LatLng(data.lat, data.lng),\n                    title: data.data.title,\n                    icon: data.tag,\n                    data: data.data,\n                    visible: visible\n                });\n\n                if (visible) {\n                    //clusterer.addMarker(marker);\n                }\n\n                google.maps.event.addListener(marker, 'click', function () {\n                    marker.animateWobble();\n                });\n\n                resolve(marker);\n\n            })\n\n        },\n\n        /**\n         * Add track to map\n         * @param {Object} data\n         * @param {boolean} visible\n         * @returns {Promise}\n         */\n        addTrack: function (data, visible) {\n\n            var url;\n\n            if (typeof data === 'string') {\n                url = data;\n            } else {\n                url = '../' + data.url;\n            }\n\n            return new Promise(function (resolve) {\n\n                return $.get(url).then(function (response) {\n                    var points = [];\n                    $(response).find('trkpt').each(function (i, v) {\n                        var lat = Number($(this).attr('lat'));\n                        var lon = Number($(this).attr('lon'));\n                        var p = new google.maps.LatLng(lat, lon);\n                        points.push(p);\n                    });\n\n                    var track = new fruskac.Track({\n                        path: points\n                    });\n\n                    track.setVisible(visible);\n\n                    resolve(track);\n\n                });\n\n            });\n\n        },\n\n        /**\n         * Add KML layer to map\n         * @param {Object} data\n         * @param {boolean} visible\n         * @returns {Promise}\n         */\n        addKml: function (data, visible) {\n\n            return new Promise(function (resolve) {\n\n                var kml = new fruskac.Kml(data.url);\n\n                if (!visible) {\n                    kml.setMap(null);\n                }\n\n                resolve(kml);\n\n            })\n\n        },\n\n        /**\n         * Set visibility on object\n         * @param {Object} object\n         * @param {boolean} value\n         */\n        setVisible: function (object, value) {\n            switch (getType(object)) {\n                case TYPE_MARKER:\n                    object.setVisible(value);\n                    break;\n                case TYPE_TRACK:\n                    object.setVisible(value);\n                    break;\n                case TYPE_KML:\n                    object.setMap(value ? gmap : null);\n                    break;\n            }\n        },\n\n        /**\n         * Focus one object on map, fit bounds\n         * @param {Object} object\n         */\n        focus: function (object, isFixedLayout) {\n\n            var self = this;\n\n            switch (getType(object)) {\n                case TYPE_MARKER:\n                    gmap.setZoom(14);\n                    gmap.panTo(object.position);\n                    var interval = setInterval(function () {\n                        object.animateBounce();\n                    }, 2000);\n                    google.maps.event.addDomListener(object.div, 'click', function () {\n                        clearInterval(interval);\n                    });\n                    // TODO: show info window\n                    //map.showInfoWindow(getInfoWindowContent(options.data), this);\n                    break;\n                case TYPE_TRACK:\n                    self.placeMarker(null);\n                    gmap.fitBounds(object.getBounds());\n                    chart.show(object.getPath(), isFixedLayout);\n                    break;\n            }\n        },\n\n        /**\n         * Place marker on map\n         * @param {google.maps.LatLng} point\n         */\n        placeMarker: function (point) {\n\n            var self = this;\n\n            if (point) {\n                if (self.marker) {\n                    self.marker.setPoint(point);\n                } else {\n                    self.marker = new fruskac.Marker({\n                        position: point\n                    });\n                }\n            } else {\n                if (self.marker) {\n                    self.marker.remove();\n                    self.marker = null;\n                }\n            }\n\n        },\n\n        /**\n         * Show info window for Marker\n         * @param {string} html\n         * @param {google.maps.Marker} marker\n         */\n        showInfoWindow: function (html, marker) {\n\n            var self = this;\n\n            self.infoWindow.setContent(html);\n            self.infoWindow.open(gmap, marker);\n\n        },\n\n        fullscreen: function () {\n\n            var params = {\n                c: gmap.getCenter().lat() + ',' + gmap.getCenter().lng() + ',' + gmap.getZoom(),\n                l: util.getParameterByName(PARAMETER_LAYERS),\n                f: util.getParameterByName(PARAMETER_FOCUS),\n                t: util.getParameterByName(PARAMETER_TRACK),\n                lang: fruskac.lang\n            };\n\n            var url = CONFIG_FULLSCREEN + '?' + Object.keys(params).map(function (i) {\n                    return params[i] && encodeURIComponent(i) + \"=\" + encodeURIComponent(params[i]);\n                }).join('&');\n\n            window.open(url, '_blank');\n        }\n    };\n\n    function getType(object) {\n        if (!object) {\n            return;\n        }\n        if (object.hasOwnProperty('position')) {//marker\n            return TYPE_MARKER;\n        } else if (object.hasOwnProperty('strokeColor')) {\n            return TYPE_TRACK;\n        } else if (object.hasOwnProperty('suppressInfoWindows')) {\n            return TYPE_KML;\n        }\n    }\n\n    window.fullscreen = function () {\n        map.fullscreen()\n    };\n\n    return Map;\n\n})();","'use strict';\n\nfruskac.Storage = (function () {\n    /**\n     * @global\n     * @param {Array} Initial data array\n     * @constructor\n     */\n    function Storage(data) {\n        if (!data) {\n            data = [];\n        }\n        this.data = data;\n    }\n\n    /**\n     * @global\n     */\n    Storage.prototype = {\n\n        /**\n         * Add object to storage\n         * @param {Object} value\n         * @param {Array|string} selector\n         * @param {string} type\n         * @param {boolean} visible\n         * @returns {*}\n         */\n        add: function (value, selector, type, visible) {\n\n            var self = this;\n\n            selector = parseSelector(selector);\n\n            var container;\n\n            if (selector) {\n                var object = self.get(selector);\n                if (object) {\n                    if (!object.children) {\n                        object.children = [];\n                    }\n                    container = object.children;\n                }\n            } else {\n                container = self.data;\n            }\n\n            if (type) {\n                object.type = type;\n                if (value.categories) {\n                    value.categories.forEach(function (category) {\n                        var parent = self.get(getParentSelector(selector));\n                        if (parent) {\n                            if (!parent.categories) {\n                                parent.categories = [];\n                            }\n                            if (parent.categories.indexOf(category) === -1) {\n                                parent.categories.push(category);\n                            }\n                        }\n                    });\n                }\n                return map.add(value, type, visible).then(function (object) {\n                    if (value.categories) {\n                        object.categories = value.categories;\n                    }\n                    container.push(object);\n                })\n            } else {\n                return new Promise(function (resolve) {\n                    container.push(value);\n                    resolve(value);\n                })\n            }\n\n        },\n\n        /**\n         * Gets root data array\n         * @returns {*}\n         */\n        root: function () {\n            return this.data;\n        },\n\n        /**\n         * Gets object based on selector and container\n         * @param {Array|string} selector\n         * @param {Array} container\n         * @returns {*}\n         */\n        get: function (selector, container) {\n\n            selector = parseSelector(selector);\n\n            if (!container) {\n                container = this.data;\n            }\n\n            if (!selector) {\n                return;\n            }\n\n            if (selector.indexOf(':') !== -1) {\n                var selectorParts = selector.split(':');\n                var container = _.find(container, {id: selectorParts[0]}).children;\n                selectorParts = selectorParts.splice(1);\n                return this.get(selectorParts.join(':'), container);\n            }\n\n            return _.find(container, function (object) {\n                if (object && object.id === selector || (object.hasOwnProperty('data') && object.data.id == selector)) {\n                    return object;\n                }\n            });\n\n        },\n\n        /**\n         * Gets children based on selector and container\n         * @param {Array|string} selector\n         * @param {Array} container\n         * @returns {*|Array|HTMLElement[]}\n         */\n        query: function (selector, container) {\n\n            selector = parseSelector(selector);\n\n            if (!container) {\n                container = this.data;\n            }\n\n            var object = this.get(selector, container);\n\n            return object.children;\n\n        },\n\n        /**\n         * Set state (on/off)\n         * @param {Array|string} selector\n         * @param {boolean} value\n         */\n        setState: function (selector, value) {\n\n            selector = parseSelector(selector);\n\n            var object = this.get(selector);\n\n            if (object) {\n                object.on = value;\n                this.setVisible(selector, value);\n            }\n\n        },\n\n        /**\n         * Get state\n         * @param {Array|string} selector\n         * @returns {*}\n         */\n        getState: function (selector) {\n\n            selector = parseSelector(selector);\n\n            var object = this.get(selector);\n\n            if (object) {\n                return object.on;\n            }\n\n        },\n\n        /**\n         * Set visibility\n         * @param {Array|string} selector\n         * @param {boolean} value\n         */\n        setVisible: function (selector, value) {\n\n            selector = parseSelector(selector);\n\n            var self = this;\n\n            var object = this.get(selector);\n\n            if (object) {\n                object.visible = value;\n\n                if (object.children) {\n                    object.children.forEach(function (child) {\n                        if (child.id) {\n                            self.setVisible([selector, child.id], value)\n                        } else {\n                            var v = value ? object.on : false;\n                            map.setVisible(child, v);\n                        }\n                    })\n                }\n            }\n\n        },\n\n\n        /**\n         * Get visibility\n         * @param {Array|string} selector\n         * @returns {boolean}\n         */\n        getVisible: function (selector) {\n\n            selector = parseSelector(selector);\n\n            var object = this.get(selector);\n\n            var visible = true;\n\n            if (object) {\n                visible = object.visible;\n\n                if (hasParentSelector(selector)) {\n                    var parentSelector = getParentSelector(selector);\n                    var parentVisible = this.getVisible(parentSelector);\n                    if (parentVisible) {\n                        if (hasParentSelector(parentSelector)) {\n                            return this.getVisible(getParentSelector(parentSelector))\n                        }\n                    } else {\n                        return false;\n                    }\n                }\n\n            }\n\n            return visible;\n\n        },\n\n\n        /**\n         * Focus object based on selector\n         * @param {Array|string} selector\n         */\n        focus: function (selector, isFixedLayout) {\n\n            var self = this;\n\n            selector = parseSelector(selector);\n\n            var object = self.get(selector);\n\n            console.log(object)\n\n            if (hasParentSelector(selector)) {\n\n                var parent = self.get(getParentSelector(selector));\n\n                self.setState(parent.id, true);\n\n                parent.children.forEach(function (child) {\n                    if (child.hasOwnProperty('id')) {\n                        self.setState([parent.id, child.id], child.id === object.id);\n                    }\n                });\n\n            }\n\n            map.focus(object && object.hasOwnProperty('children') ? object.children[0] : object, isFixedLayout);\n\n        },\n\n        highlight: function (selector, category) {\n\n            var self = this;\n\n            selector = parseSelector(selector);\n\n            var object = self.get(selector);\n\n            if (object.children) {\n                object.children.forEach(function (item) {\n                    if (item.children) {\n                        item.children.forEach(function (child) {\n                            var shoudBeOpaque = category && child.categories.indexOf(category) === -1;\n                            child.setOpaque(shoudBeOpaque);\n                            if (!shoudBeOpaque) {\n                                child.animateWobble();\n                            }\n                        })\n                    }\n                })\n            }\n        },\n\n        getSelectors: function () {\n            return getSelectorsForContainer(storage.root());\n        }\n    };\n\n    /**\n     * Get parent selector\n     * @param {Array|string} selector\n     * @returns {string}\n     */\n    function getParentSelector(selector) {\n\n        selector = parseSelector(selector);\n\n        if (!hasParentSelector(selector)) {\n            return;\n        }\n\n        var selectorParts = selector.split(':');\n        selectorParts.splice(-1);\n\n        return selectorParts.join(':');\n    }\n\n    /**\n     * Test if parent selector is available\n     * @param {Array|string} selector\n     * @returns {boolean}\n     */\n    function hasParentSelector(selector) {\n\n        selector = parseSelector(selector);\n\n        return selector.indexOf(':') !== -1;\n    }\n\n    /**\n     * Parse array (if provided) into string\n     * @param {Array|string} selector\n     * @returns {*}\n     */\n    function parseSelector(selector) {\n\n        if (!selector) {\n            return;\n        }\n\n        if (typeof selector != 'string') {\n            selector = selector.join(':');\n        }\n\n        return selector.toLowerCase();\n\n    }\n\n    /**\n     *\n     * @param {Array} items\n     * @param {Array|string} selector\n     * @returns {Array}\n     */\n    function getSelectorsForContainer(items, selector) {\n\n        selector = parseSelector(selector);\n\n        var children = [];\n\n        items.forEach(function (item) {\n\n            if (!item.id) {\n                return;\n            }\n\n            var itemSelector;\n            if (selector) {\n                itemSelector = parseSelector([selector, item.id]);\n            } else {\n                itemSelector = item.id\n            }\n\n            var object = {\n                id: item.id,\n                getVisible: function () {\n                    return storage.getState(itemSelector);\n                },\n                setVisible: function (value) {\n                    return storage.setState(itemSelector, value);\n                },\n                focus: function () {\n                    return storage.focus(itemSelector);\n                }\n            };\n\n            if (item.type) {\n                object.type = item.type;\n            }\n\n            if (item.children && item.children.length) {\n                var subChildren = getSelectorsForContainer(item.children, itemSelector);\n                if (subChildren && subChildren.length) {\n                    object.children = subChildren;\n                }\n            }\n\n            if (item.categories && item.categories.length) {\n                object.categories = item.categories;\n                object.highlight = function (category) {\n                    storage.highlight(object.id, category)\n                }\n            }\n\n            children.push(object)\n\n        });\n\n        return children;\n\n    }\n\n\n    return Storage;\n\n})();","'use strict';\n\nfruskac.Loader = (function () {\n\n    /**\n     * Loader\n     *\n     * @global\n     * @constructor\n     */\n    function Loader() {\n    }\n\n    /**\n     * @global\n     */\n    Loader.prototype = {\n\n\n        /**\n         * Load items\n         *\n         * @param {Array} items\n         */\n        load: function (items) {\n\n            var promises = [];\n\n            items.forEach(function (item) {\n                promises.push(load.apply(this, item));\n            });\n\n            return Promise.all(promises);\n\n        },\n\n        /**\n         * Append item to map\n         *\n         * @param url\n         * @param type\n         */\n        append: function (url, type) {\n            return map.add(url, type, true)\n        }\n\n    };\n\n    /**\n     * Initialize layers\n     *\n     * @param {string} url\n     * @param {string} name\n     * @param {string} type\n     * @param {boolean} visible\n     */\n    function load(url, name, type, visible) {\n\n        return storage.add({\n            id: name.toLowerCase(),\n            visible: visible,\n            on: visible\n        }).then(function () {\n            return $.get(url).success(function (response) { // get json array of items\n\n                var promises = [];\n\n                response.forEach(function (item) {\n                    var p, container = storage.get([name, item.tag]);\n\n                    if (container) {\n                        p = new Promise(function (resolve) {\n                            resolve();\n                        });\n                    } else {\n                        p = storage.add({\n                            id: item.tag.toLowerCase(),\n                            visible: visible,\n                            on: visible,\n                            type: type\n                        }, name);\n                    }\n\n                    p.then(function () {\n                        storage.add(item, [name.toLowerCase(), item.tag], type, visible);\n                    });\n\n                    promises.push(p);\n\n                });\n\n                return Promise.all(promises);\n\n            })\n        });\n    }\n\n    return Loader;\n\n})();","'use strict';\n\nfruskac.Api = (function () {\n\n    function Api() {\n    }\n\n    Api.prototype = {\n\n        /**\n         * Fired when ready\n         * @global\n         * @param {Function} callback\n         */\n        ready: function (callback) {\n            callback();\n        },\n\n        /**\n         * Get data\n         * @global\n         * @returns {Object[]}\n         */\n        getData: function () {\n            return storage.getSelectors();\n        },\n\n        /**\n         * Get / Set clustering state\n         * @global\n         * @param {undefined|boolean} value\n         * @returns {*|boolean}\n         */\n        clustering: function (value) {\n            if (value === undefined) { // act as getter\n                //return clusterer.enabled;\n            } else { // act as setter\n                clusterer.enabled = value;\n                if (value) {\n                    clusterer.setMaxZoom(null);\n                    clusterer.setGridSize(50);\n                } else {\n                    clusterer.setMaxZoom(1);\n                    clusterer.setGridSize(1);\n                }\n                clusterer.resetViewport();\n                clusterer.redraw();\n            }\n        },\n\n        /**\n         * Get / Set map type\n         * @global\n         * @param {undefined|string} value\n         * @returns {*}\n         */\n        type: function (value) {\n            if (value === undefined) { // act as getter\n                return gmap.getMapTypeId();\n            } else { // act as setter\n                return gmap.setMapTypeId(value);\n            }\n        }\n    };\n\n    return Api;\n\n})();","'use strict';\n\n// expose API\nwindow.fruskac = new fruskac.Api();\n\nvar util = new fruskac.Util();\n\nfruskac.isCrossDomain = window.self !== window.top && document.referrer && !(new RegExp('//' + document.domain)).test(document.referrer);\nfruskac.lang = util.getParameterByName('lang') || (window.self !== window.top && window.top.document.documentElement.lang) || CONFIG_LANG;\n\nvar i18n = new fruskac.I18n(fruskac.lang);\n\nvar storage = new fruskac.Storage();\n\nvar mapConfig = {\n    center: new google.maps.LatLng(45.167031, 19.69677),\n    zoom: 11,\n    mapTypeId: google.maps.MapTypeId.TERRAIN,\n    mapTypeControl: false,\n    zoomControlOptions: {\n        position: google.maps.ControlPosition.LEFT_BOTTOM\n    },\n    streetViewControlOptions: {\n        position: google.maps.ControlPosition.LEFT_BOTTOM\n    }\n};\n\nvar latLngZoom = util.getParameterByName(PARAMETER_COORDINATES);\nif (latLngZoom) {\n    var parts = util.getParameterPartsByName(PARAMETER_COORDINATES);\n    if (parts && parts.length) {\n        if (parts[0] && parts[1]) {\n            mapConfig.center = new google.maps.LatLng(parts[0], parts[1]);\n        }\n        if (parts[2]) {\n            mapConfig.zoom = parseFloat(parts[2]);\n        }\n    }\n}\n\nvar gmap = new google.maps.Map(document.getElementById('map'), mapConfig);\n\nvar overlayImageBounds = {\n    north: 45.166508,\n    south: 45.136001,\n    east: 19.767672,\n    west: 19.681498\n};\nvar overlayOptions = {\n    opacity: 0.8,\n    clickable: false\n};\nvar groundOverlay = new google.maps.GroundOverlay(\n    'img/overlay.png',\n    overlayImageBounds,\n    overlayOptions\n);\ngroundOverlay.setMap(gmap);\n\nvar map = new fruskac.Map(gmap);\n\n/*var clusterer = new MarkerClusterer(gmap, [], {\n maxZoom: 12,\n gridSize: 50,\n styles: [\n {\n textColor: 'white',\n url: 'img/sprite.png',\n backgroundPosition: '0 -523px',\n height: 32,\n width: 32\n },\n {\n textColor: 'white',\n url: 'img/sprite.png',\n backgroundPosition: '0 -443px',\n height: 48,\n width: 48\n },\n {\n textColor: 'white',\n url: 'img/sprite.png',\n backgroundPosition: '0 -379px',\n height: 64,\n width: 64\n }\n ]\n });\n\n clusterer.enabled = true;*/\n\nvar chart = new fruskac.Chart(document.getElementById('chart_container'));\n\n/*\n * URL param: \"l\" defines layers visible. If not defined, default visibility will be used\n */\n\n// default layers and their visibility\nvar layers = CONFIG_LAYERS;\n\nvar activeLayers = [];\n\nvar layersFromUrl = util.getParameterPartsByName(PARAMETER_LAYERS);\n\nlayers.forEach(function (layer) {\n\n    if (layersFromUrl) { // if layer URL param exists, layers' visibility should follow\n        layer.visible = layersFromUrl.indexOf(layer.name) !== -1;\n    }\n\n    activeLayers.push(Object.values(layer));\n});\n\n\n/*\n Load remote track\n */\n\nvar track = util.getParameterByName(PARAMETER_TRACK);\n\n/*\n Load from \"activeLayers\"\n */\n\nvar loader = new fruskac.Loader();\n\nvar focus = util.getParameterByName(PARAMETER_FOCUS);\n\nloader.load(activeLayers).then(function () {\n\n    if (track) {\n        loader.append(track, TYPE_TRACK).then(function (object) {\n            google.maps.event.addListenerOnce(gmap, 'idle', function () { // wait for map to be loaded\n                map.focus(object); // focus on appended object\n            });\n        })\n    }\n\n    if (focus) {\n        google.maps.event.addListenerOnce(gmap, 'idle', function () { // wait for map to be loaded\n            storage.focus(focus, true); // focus on selected object\n        });\n    }\n\n});\n"]}